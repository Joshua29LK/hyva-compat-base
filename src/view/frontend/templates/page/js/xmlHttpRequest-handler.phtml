<?php
//  @codingStandardsIgnoreFile
declare(strict_types=1);
/**
 * BSS Commerce Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://bsscommerce.com/Bss-Commerce-License.txt
 *
 * @category   BSS
 * @package    Hyva_BssRewardPoint
 * @author     Extension Team
 * @copyright  Copyright (c) 2022 BSS Commerce Co. ( http://bsscommerce.com )
 * @license    http://bsscommerce.com/Bss-Commerce-License.txt
 */

use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

/** @var Escaper $escaper */
/** @var Template $block */
?>

<script>
    'use strict';

    function responseSerialize(response) {
        if (response.redirected) {
            window.location.href = response.url;
        } else if (response.ok) {
            return response.json();
        } else {
            throw new Error('<?= __('Something went wrong. Please contact the website admin for more information.') ?>');
        }
    }

    if (typeof window.buildRestAPIUrl !== 'function') {
        window.buildRestAPIUrl = function (url, params) {
            const method = 'rest',
                storeCode = window.checkoutConfig.storeCode,
                version = 'V1',
                serviceUrl = ':method/:storeCode/:version';

            let urlParts;

            params.method = method;
            params.storeCode = storeCode;
            params.version = version;

            url = serviceUrl + url;

            urlParts = url.split('/');
            urlParts = urlParts.filter(Boolean);

            Object.entries(urlParts).forEach (entry => {
                let [key, part] = entry;
                part = part.replace(':', '');

                if (params[part] !== undefined) {
                    urlParts[key] = params[part];
                }
            });

            return urlParts.join('/');
        }
    }

    if (typeof window.isObjectEmpty !== 'function') {
        window.isObjectEmpty = function (obj) {
            return (
                Object.prototype.toString.call(obj) === '[object Object]' &&
                JSON.stringify(obj) === '{}'
            );
        }
    }
</script>
